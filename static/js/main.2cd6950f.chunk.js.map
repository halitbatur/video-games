{"version":3,"sources":["components/style.tsx","components/filterBar/FilterBar.Styled.tsx","components/filterBar/FilterBar.tsx","components/gameCard/GameCard.Styled.tsx","components/gameCard/GameCard.tsx","containers/videoGamesPage/VideoGamesPage.styled.tsx","containers/videoGamesPage/VideoGamesPage.tsx","containers/contactPage/ContactPage.Styled.tsx","containers/contactPage/ContactPage.tsx","components/navbar/NavbarStyled.tsx","components/navbar/Navbar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BreakPoints","ColorPalette","FilterBarContainer","styled","div","IntpuContainer","FilterContent","Header","header","ArrowContainer","Option","Select","defatultFilters","contains","minScore","orderBy","type","order","FilterBar","games","setFilteredGames","React","useState","filters","setFilters","compareGames","a","b","firstElement","secondElement","Date","first_release_date","getTime","name","toLowerCase","rating","useEffect","filteredGames","filter","game","gameName","gameRating","includes","sort","placeholder","bordered","value","onChange","e","inputValue","target","className","parseInt","style","display","flexDirection","onClick","changeOrderTo","ArrowUpOutlined","ArrowDownOutlined","orderType","width","dropdownStyle","color","backgroundColor","alignSelf","marginTop","GameContainer","ScoreContainer","Score","Meta","Card","GameCard","summary","id","gutter","xs","md","lg","sm","maxHeight","height","src","alt","title","description","todayTime","month","getMonth","getDate","getFullYear","GetFormattedDate","margin","justifyContent","toString","PageContainer","GamesContainer","VideoGamesPage","setGames","fetchData","fetch","fetchedData","json","data","setTimeout","map","size","ContactPageContainer","GetInTouchContainer","FormContainer","TextArea","Input","ContactPage","marginBottom","columnGap","rows","NavbarContainer","LinkContainer","Shadow","Navbar","location","useLocation","ROUTES","route","pathname","path","shadow","to","linkName","Component","App","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2cd6950f.chunk.js","sourcesContent":["export const BreakPoints: Record<string, string> = {\n  sm: \"576px\",\n  md: \"768px\",\n  lg: \"992px\",\n  xl: \"1200px\",\n};\n\nexport const ColorPalette: Record<string, string> = {\n  cardBackground: \"#0e1a2b\",\n  headingAndLabels: \"#ffffff\",\n  text: \"#c1d1e8\",\n  inputBackground: \"#182c47\",\n  buttons: \"#5692e8\",\n};\n","import styled from \"@emotion/styled\";\nimport { ColorPalette } from \"../style\";\n\nexport const FilterBarContainer = styled.div`\n  background-color: ${ColorPalette.cardBackground};\n  color: ${ColorPalette.headingAndLabels};\n  font-family: Montserrat;\n\n  p {\n    margin-bottom: 5px;\n    font-size: 14px;\n  }\n\n  input,\n  .ant-input,\n  .ant-select-selector,\n  .ant-select-selection {\n    background-color: ${ColorPalette.inputBackground}!important;\n    color: ${ColorPalette.headingAndLabels};\n  }\n\n  .svg {\n    height: 2em;\n  }\n`;\n\nexport const IntpuContainer = styled.div`\n  margin-bottom: 30px;\n`;\n\nexport const FilterContent = styled.div`\n  padding: 15px;\n  margin-top: 10px;\n`;\n\nexport const Header = styled.header`\n  font-size: 20px;\n  margin-bottom: 35px;\n`;\n\nexport const ArrowContainer = styled.div`\n  background-color: ${ColorPalette.buttons};\n  width: 35px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  :hover {\n    cursor: pointer;\n  }\n`;\n","import React from \"react\";\r\nimport {\r\n  Header,\r\n  FilterBarContainer,\r\n  FilterContent,\r\n  IntpuContainer,\r\n  ArrowContainer,\r\n} from \"./FilterBar.Styled\";\r\nimport { Input, Select, Button } from \"antd\";\r\nimport { ArrowUpOutlined, ArrowDownOutlined } from \"@ant-design/icons\";\r\nimport { ColorPalette } from \"../style\";\r\nimport { GameCardProps } from \"../gameCard/GameCard\";\r\n\r\nconst { Option } = Select;\r\n\r\ninterface GameFilters {\r\n  contains: string;\r\n  minScore: number | null;\r\n  orderBy: {\r\n    type: string;\r\n    order: \"asc\" | \"dsc\";\r\n  };\r\n}\r\n\r\nconst defatultFilters: GameFilters = {\r\n  contains: \"\",\r\n  minScore: null,\r\n  orderBy: {\r\n    type: \"\",\r\n    order: \"asc\",\r\n  },\r\n};\r\n\r\ninterface FilterBarProps {\r\n  games: GameCardProps[] | undefined;\r\n  setFilteredGames: React.Dispatch<\r\n    React.SetStateAction<GameCardProps[] | undefined>\r\n  >;\r\n}\r\n\r\nconst FilterBar: React.FC<FilterBarProps> = ({ games, setFilteredGames }) => {\r\n  const [filters, setFilters] = React.useState<GameFilters>(defatultFilters);\r\n\r\n  const compareGames = (a, b) => {\r\n    let firstElement, secondElement;\r\n\r\n    if (filters.orderBy.type === \"first_release_date\") {\r\n      firstElement = new Date(a.first_release_date).getTime();\r\n      secondElement = new Date(b.first_release_date).getTime();\r\n    } else if (filters.orderBy.type === \"name\") {\r\n      firstElement = a.name.toLowerCase();\r\n      secondElement = b.name.toLowerCase();\r\n    } else if (filters.orderBy.type === \"rating\") {\r\n      firstElement = a.rating;\r\n      secondElement = b.rating;\r\n    } else {\r\n      return;\r\n    }\r\n\r\n    if (firstElement > secondElement) {\r\n      return filters.orderBy.order === \"dsc\" ? -1 : 1;\r\n    } else if (secondElement > firstElement) {\r\n      return filters.orderBy.order === \"dsc\" ? 1 : -1;\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  const applyFilters = () => {\r\n    setFilteredGames(() => {\r\n      const filteredGames: GameCardProps[] = [...games];\r\n      const filter = filters.contains.toLowerCase();\r\n      return filteredGames\r\n        .filter((game) => {\r\n          const gameName = game.name.toLowerCase();\r\n          const gameRating = game.rating / 10;\r\n          return gameName.includes(filter) && gameRating > filters.minScore;\r\n        })\r\n        .sort(compareGames);\r\n    });\r\n  };\r\n\r\n  const handleStringChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const inputValue = e.target.value;\r\n    setFilters({ ...filters, contains: inputValue });\r\n  };\r\n\r\n  const handleScoreChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const minScore = e.target.value ? parseInt(e.target.value) : null;\r\n    if ((minScore <= 10 && minScore >= 1) || !minScore) {\r\n      setFilters({ ...filters, minScore });\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (games) {\r\n      applyFilters();\r\n    }\r\n  }, [filters]);\r\n\r\n  return (\r\n    <FilterBarContainer>\r\n      <FilterContent>\r\n        <Header>Filter Results</Header>\r\n        <IntpuContainer>\r\n          <p>Name (contains)</p>\r\n          <Input\r\n            placeholder=\"Text String\"\r\n            bordered={false}\r\n            value={filters?.contains}\r\n            onChange={handleStringChange}\r\n            className=\"input\"\r\n          />\r\n        </IntpuContainer>\r\n        <IntpuContainer>\r\n          <p>Minimum Score</p>\r\n          <Input\r\n            placeholder=\"1 - 10\"\r\n            bordered={false}\r\n            value={filters?.minScore}\r\n            onChange={handleScoreChange}\r\n            className=\"input\"\r\n            type=\"number\"\r\n          />\r\n        </IntpuContainer>\r\n        <p>Order By</p>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <div style={{ display: \"flex\" }}>\r\n            <ArrowContainer\r\n              onClick={(e) => {\r\n                const changeOrderTo =\r\n                  filters.orderBy.order === \"asc\" ? \"dsc\" : \"asc\";\r\n                setFilters({\r\n                  ...filters,\r\n                  orderBy: { ...filters.orderBy, order: changeOrderTo },\r\n                });\r\n              }}\r\n            >\r\n              {filters.orderBy.order === \"dsc\" ? (\r\n                <ArrowUpOutlined />\r\n              ) : (\r\n                <ArrowDownOutlined />\r\n              )}\r\n            </ArrowContainer>\r\n            <Select\r\n              value={filters.orderBy.type}\r\n              onChange={(orderType) =>\r\n                setFilters({\r\n                  ...filters,\r\n                  orderBy: { ...filters.orderBy, type: orderType },\r\n                })\r\n              }\r\n              bordered={false}\r\n              style={{\r\n                width: \"100%\",\r\n              }}\r\n              dropdownStyle={{\r\n                color: \"red\",\r\n                backgroundColor: ColorPalette.inputBackground,\r\n              }}\r\n            >\r\n              <Option value=\"first_release_date\">Release Date</Option>\r\n              <Option value=\"rating\">Score</Option>\r\n              <Option value=\"name\">Name</Option>\r\n            </Select>\r\n          </div>\r\n          <Button\r\n            type=\"primary\"\r\n            style={{\r\n              alignSelf: \"flex-end\",\r\n              marginTop: \"10px\",\r\n            }}\r\n            onClick={(e) => {\r\n              setFilters(defatultFilters);\r\n              setFilteredGames(games);\r\n            }}\r\n          >\r\n            Clear\r\n          </Button>\r\n        </div>\r\n      </FilterContent>\r\n    </FilterBarContainer>\r\n  );\r\n};\r\n\r\nexport default FilterBar;\r\n","import styled from \"@emotion/styled\";\nimport { ColorPalette, BreakPoints } from \"../style\";\n\nexport const GameContainer = styled.div`\n  color: white;\n  background-color: ${ColorPalette.cardBackground};\n  max-height: 150px;\n\n  .ant-card-meta-title {\n    font-family: Montserrat;\n    margin-top: 15px;\n    color: ${ColorPalette.headingAndLabels};\n    font-size: 20px;\n    line-height: 28px;\n\n    @media (max-width: ${BreakPoints.sm}) {\n      font-size: 14px;\n    }\n  }\n\n  .ant-card-meta-description {\n    color: ${ColorPalette.text};\n    font-size: 16px;\n    @media (max-width: ${BreakPoints.sm}) {\n      font-size: 10px;\n    }\n  }\n\n  p {\n    color: ${ColorPalette.text};\n    font-size: 14px;\n    @media (max-width: ${BreakPoints.sm}) {\n      font-size: 8px;\n    }\n  }\n`;\n\nexport const MockGameImage = styled.div`\n  background-color: #000;\n`;\n\nexport const ScoreContainer = styled.div`\n  text-align: center;\n  display: flex;\n  margin: auto;\n`;\n\nexport const Score = styled.div`\n  background-color: ${ColorPalette.buttons};\n  border-radius: 100%;\n  width: 50px;\n  height: 50px;\n  margin: auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 26px;\n  font-weight: bold;\n  @media (max-width: ${BreakPoints.sm}) {\n    width: 30px;\n    height: 30px;\n    font-size: 14px;\n  }\n`;\n","import React from \"react\";\nimport { Card, Row, Col, Image } from \"antd\";\nimport { GameContainer, ScoreContainer, Score } from \"./GameCard.Styled\";\nimport Scrollbar from \"react-scrollbars-custom\";\nconst { Meta } = Card;\n\nexport interface GameCardProps {\n  id: number;\n  name: string;\n  first_release_date: number;\n  summary: string;\n  rating: number;\n}\n\nconst GameCard: React.FC<GameCardProps> = ({\n  name,\n  first_release_date,\n  summary,\n  rating,\n  id,\n}) => {\n  const GetFormattedDate = () => {\n    var todayTime = new Date(first_release_date);\n    var month = todayTime.getMonth() + 1;\n    var day = todayTime.getDate();\n    var year = todayTime.getFullYear();\n    return day + \"/\" + month + \"/\" + year;\n  };\n\n  return (\n    <GameContainer>\n      <Row gutter={{ xs: 2, md: 2, lg: 8 }}>\n        <Col xs={0} sm={5} md={4} lg={4}>\n          <div style={{ maxHeight: \"150px\", height: \"100%\" }}>\n            <Image\n              src=\"https://i.stack.imgur.com/khVpE.png\"\n              alt=\"black\"\n              height=\"100%\"\n            />\n          </div>\n        </Col>\n        <Col xs={20} sm={15} md={17} lg={17} style={{ height: \"150px\" }}>\n          <Meta\n            title={name}\n            description={\"Release Date: \" + GetFormattedDate()}\n          />\n          <Scrollbar style={{ height: \"60px\", margin: \"10px 0\" }}>\n            <p>{summary}</p>\n          </Scrollbar>\n        </Col>\n        <Col\n          xs={4}\n          md={3}\n          style={{ display: \"flex\", justifyContent: \"center\" }}\n        >\n          <ScoreContainer>\n            <Score>{parseInt(rating.toString()) / 10}</Score>\n          </ScoreContainer>\n        </Col>\n      </Row>\n    </GameContainer>\n  );\n};\n\nexport default GameCard;\n","import styled from \"@emotion/styled\";\nimport { BreakPoints } from \"../../components/style\";\n\nexport const PageContainer = styled.div`\n  padding: 50px 50px 0;\n  font-family: Mulish;\n\n  @media (max-width: ${BreakPoints.md}) {\n    padding: 30px 30px 0;\n  }\n  @media (max-width: ${BreakPoints.sm}) {\n    padding: 10px 10px 0;\n  }\n`;\n\nexport const GamesContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 20px;\n`;\n","import React from \"react\";\nimport FilterBar from \"../../components/filterBar/FilterBar\";\nimport GameCard, { GameCardProps } from \"../../components/gameCard/GameCard\";\nimport { GamesContainer, PageContainer } from \"./VideoGamesPage.styled\";\nimport { Row, Col, Spin } from \"antd\";\nimport Scrollbar from \"react-scrollbars-custom\";\n\nconst VIDEO_GAMES_API: string =\n  \"https://public.connectnow.org.uk/applicant-test/.\";\n\nconst VideoGamesPage = () => {\n  const [games, setGames] = React.useState<GameCardProps[]>();\n  const [filteredGames, setFilteredGames] = React.useState<GameCardProps[]>();\n\n  const fetchData = async () => {\n    const fetchedData = await fetch(VIDEO_GAMES_API);\n    const data = await fetchedData.json();\n    setGames(data);\n    setFilteredGames(data);\n  };\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      fetchData();\n    }, 2000);\n  }, []);\n\n  return (\n    <PageContainer>\n      <Row gutter={32}>\n        <Col xs={24} sm={24} md={24} lg={6}>\n          <FilterBar games={games} setFilteredGames={setFilteredGames} />\n        </Col>\n        <Col xs={24} sm={24} md={24} lg={18}>\n          {filteredGames ? (\n            <Scrollbar style={{ height: \"90vh\", margin: \"10px 0\" }}>\n              <GamesContainer>\n                {filteredGames?.map((game) => (\n                  <GameCard\n                    key={game.id}\n                    id={game.id}\n                    rating={game.rating}\n                    name={game.name}\n                    first_release_date={game.first_release_date}\n                    summary={game.summary}\n                  />\n                ))}\n              </GamesContainer>\n            </Scrollbar>\n          ) : (\n            <Spin\n              size=\"large\"\n              style={{ margin: \"30px auto\", display: \"block\" }}\n            />\n          )}\n        </Col>\n      </Row>\n    </PageContainer>\n  );\n};\n\nexport default VideoGamesPage;\n","import styled from \"@emotion/styled\";\nimport { ColorPalette, BreakPoints } from \"../../components/style\";\n\nexport const ContactPageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 50px;\n  color: ${ColorPalette.text};\n  font-family: Mulish;\n\n  h3 {\n    font-size: 18px;\n    color: ${ColorPalette.text};\n  }\n\n  h2 {\n    font-size: 26px;\n    color: ${ColorPalette.text};\n    font-weight: bold;\n  }\n\n  .ant-input {\n    background-color: ${ColorPalette.inputBackground};\n    color: ${ColorPalette.headingAndLabels};\n    border: none;\n  }\n`;\n\nexport const GetInTouchContainer = styled.div`\n  width: 40%;\n  margin: auto;\n  margin-bottom: 30px;\n\n  @media (max-width: ${BreakPoints.lg}) {\n    width: 55%;\n  }\n\n  @media (max-width: ${BreakPoints.md}) {\n    width: 70%;\n  }\n\n  @media (max-width: ${BreakPoints.sm}) {\n    width: 80%;\n  }\n`;\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 40%;\n  margin: auto;\n  background-color: ${ColorPalette.cardBackground};\n  padding: 20px;\n\n  @media (max-width: ${BreakPoints.md}) {\n    width: 55%;\n  }\n\n  @media (max-width: ${BreakPoints.md}) {\n    width: 70%;\n  }\n\n  @media (max-width: ${BreakPoints.sm}) {\n    width: 80%;\n  }\n`;\n","import { Input, Button } from \"antd\";\nimport React from \"react\";\nimport {\n  ContactPageContainer,\n  FormContainer,\n  GetInTouchContainer,\n} from \"./ContactPage.Styled\";\n\nconst { TextArea } = Input;\n\nconst ContactPage = () => {\n  return (\n    <ContactPageContainer style={{ display: \"flex\", flexDirection: \"column\" }}>\n      <GetInTouchContainer>\n        <h2>GET IN TOUCH</h2>\n        <p>\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Est animi\n          possimus quisquam fugiat aspernatur vel quae. Ducimus debitis, quia\n          reiciendis mollitia beatae, ipsam necessitatibus quibusdam voluptatum\n          harum soluta veritatis illum!\n        </p>\n      </GetInTouchContainer>\n      <FormContainer>\n        <h3>Contact Form</h3>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            marginBottom: \"15px\",\n            columnGap: \"10px\",\n          }}\n        >\n          <div>\n            <p>Name</p>\n            <Input />\n          </div>\n          <div>\n            <p>Email Address</p>\n            <Input />\n          </div>\n        </div>\n        <p>Message</p>\n        <TextArea rows={4} />\n        <Button\n          type=\"primary\"\n          style={{\n            alignSelf: \"flex-end\",\n            marginTop: \"10px\",\n          }}\n        >\n          Send\n        </Button>\n      </FormContainer>\n    </ContactPageContainer>\n  );\n};\n\nexport default ContactPage;\n","import styled from \"@emotion/styled\";\nimport { ColorPalette, BreakPoints } from \"../style\";\n\nexport const NavbarContainer = styled.div`\n  padding-top: 100px;\n  padding-left: 100px;\n\n  nav {\n    display: flex;\n    @media (max-width: ${BreakPoints.md}) {\n      flex-direction: column;\n      row-gap: 30px;\n    }\n  }\n\n  @media (max-width: ${BreakPoints.md}) {\n    padding-left: 50px;\n  }\n\n  a {\n    margin-left: 30px;\n    position: relative;\n    color: ${ColorPalette.headingAndLabels};\n    font-size: 28px;\n    font-family: Montserrat;\n    z-index: 2;\n  }\n`;\n\nexport const LinkContainer = styled.div`\n  position: relative;\n`;\n\nexport const Shadow = styled.div`\n  position: absolute;\n  color: #5692e8;\n  font-family: Montserrat;\n  z-index: 0;\n  opacity: 0.3;\n  font-size: 58px;\n  bottom: 5px;\n\n  @media (max-width: ${BreakPoints.md}) {\n    opacity: 0.2;\n  }\n`;\n","import React from \"react\";\nimport { NavbarContainer, Shadow, LinkContainer } from \"./NavbarStyled\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { ROUTES } from \"../../App\";\n\nconst Navbar = () => {\n  const location = useLocation();\n\n  return (\n    <NavbarContainer>\n      <nav>\n        {ROUTES.map((route) => (\n          <LinkContainer key={route.path}>\n            {location.pathname === route.path && (\n              <Shadow>{route.shadow}</Shadow>\n            )}\n            <Link to={route.path}>{route.linkName}</Link>\n          </LinkContainer>\n        ))}\n      </nav>\n    </NavbarContainer>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport VideoGamesPage from \"../src/containers/videoGamesPage/VideoGamesPage\";\nimport ContactPage from \"../src/containers/contactPage/ContactPage\";\nimport Navbar from \"../src/components/navbar/Navbar\";\n\ninterface iRoute {\n  path: string;\n  linkName: string;\n  shadow: string;\n  Component: () => JSX.Element;\n}\n\nexport const ROUTES: iRoute[] = [\n  {\n    path: \"/video-games\",\n    linkName: \"VIDEO GAMES\",\n    shadow: \"VIDEO\",\n    Component: VideoGamesPage,\n  },\n  {\n    path: \"/video-games/contact\",\n    linkName: \"CONTACT\",\n    shadow: \"CONTACT\",\n    Component: ContactPage,\n  },\n];\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          {ROUTES.map(({ path, Component }) => (\n            <Route exact path={path} key={path}>\n              <Component />\n            </Route>\n          ))}\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}